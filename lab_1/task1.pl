%ДЛИНА СПИСКА
%(Список, Длина)
my_length([_|T],X):-
  my_length(T,X1),
  X is X1 + 1.
my_length([],0).

%ПРОВЕРКА ПРИНАДЛЕЖНОСТИ
%(Элемент, Список)
my_member(X,[X|_]).
my_member(X,[_|T]):-
  my_member(X,T).

%КОНКАТЕНАЦИЯ СПИСКОВ
%(Список1, Список2, Объединение)
my_append([H|T],Y,[H|Z]):-
  my_append(T,Y,Z).
my_append([],X,X).

%УДАЛЕНИЕ ЭЛЕМЕНТА ИЗ СПИСКА
%(Элемент, Список, Список без элемента)
my_remove(X,[X|T],T).
my_remove(X,[H|T],[H|Z]):-
  my_remove(X,T,Z).

%ПЕРЕСТАНОВКА ЭЛЕМЕНТОВ СПИСКА (Проверка или поиск всех)
%(Список, Перестановка)

my_permute([], []).
my_permute(L, [H|T]):-
  my_remove(H, L, X),
  my_permute(X, T).

%ПОДСПИСОК СПИСКА (Проверка или поиск всех)
%(Подсписок, Список)
my_sublist(S, L):-
  my_append(L1, _, L),
  my_append(_, S, L1).

%ПОЛУЧЕНИЕ N-ОГО ЭЛЕМЕНТА БЕЗ СТАНДАРТНЫХ ПРЕДИКАТОВ
%(Номер, Список, Элемент)
getn(1,[H|_],H).
getn(N,[_|T],X):-
  getn(N1,T,X),
  N is N1+1.

%ПОЛУЧЕНИЕ N-ОГО ЭЛЕМЕНТА
%(Номер, Список, Элемент)
getn_std(N,T,X):-
  my_append(A,[X|_],T),
  my_length(A,L),
  N is L+1.


%ПРОВЕРКА НА ГЕОМЕТРИЧЕСКУЮ ПРОГРЕССИЮ
%(Список)
is_geom(H):-
  %поиск прогрессии с любым знаменателем
  is_geom(H,_).

%ПРОВЕРКА НА ГЕОМЕТРИЧЕСКУЮ ПРОГРЕССИЮ
%И ВЫЧИСЛЕНИЕ ЗНАМЕНАТЕЛЯ ПРОГРЕCСИИ
%(Список, Знаменатель прогрессии)
%пустой список
is_geom([],_).
%список с одним элементом
is_geom([_],_).
%список с двумя и более
%для сравнения необходимо хотя бы два элемента
is_geom([A,B|T],N):-
  %проверка деления на ноль
  A =\= 0,
  N is B/A,
  is_geom([B|T],N).


%Пример совместного использования предикатов

%Попытаться переставить элементы в списке, так, чтобы
%получилась геометрическая прогрессия
generate(L,L1):-
  my_permute(L, L1),
  is_geom(L1).
